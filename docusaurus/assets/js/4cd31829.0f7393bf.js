"use strict";(self.webpackChunkauto_doc_test=self.webpackChunkauto_doc_test||[]).push([[2643],{1730:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>r,default:()=>h,frontMatter:()=>d,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"taskhive-api/delete_note","title":"Delete Note API Endpoint","description":"Documentation for the DELETE method of the Delete Note API endpoint, detailing its usage and functionality.","source":"@site/docs/taskhive-api/delete_note.md","sourceDirName":"taskhive-api","slug":"/taskhive-api/delete_note","permalink":"/docusaurus/docs/taskhive-api/delete_note","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/taskhive-api/delete_note.md","tags":[],"version":"current","frontMatter":{"title":"Delete Note API Endpoint","description":"Documentation for the DELETE method of the Delete Note API endpoint, detailing its usage and functionality."},"sidebar":"tutorialSidebar","previous":{"title":"Create Task Component","permalink":"/docusaurus/docs/taskhive-api/create_task"},"next":{"title":"Delete Task API Endpoint","permalink":"/docusaurus/docs/taskhive-api/delete_task"}}');var o=n(4848),s=n(8453);const d={title:"Delete Note API Endpoint",description:"Documentation for the DELETE method of the Delete Note API endpoint, detailing its usage and functionality."},r="Delete Note API Endpoint",a={},l=[{value:"Endpoint Details",id:"endpoint-details",level:2},{value:"Props",id:"props",level:3},{value:"HTML Elements Rendered",id:"html-elements-rendered",level:3}];function c(e){const t={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.header,{children:(0,o.jsx)(t.h1,{id:"delete-note-api-endpoint",children:"Delete Note API Endpoint"})}),"\n",(0,o.jsx)(t.p,{children:"The Delete Note API endpoint allows users to delete a specific note by its unique identifier."}),"\n",(0,o.jsx)(t.h2,{id:"endpoint-details",children:"Endpoint Details"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.strong,{children:"Path"}),": ",(0,o.jsx)(t.code,{children:"/api/notes/<int:note_id>"})]}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.strong,{children:"Methods"}),": ",(0,o.jsx)(t.code,{children:"DELETE"})]}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.strong,{children:"Function"}),": ",(0,o.jsx)(t.code,{children:"delete_note"})]}),"\n"]}),"\n",(0,o.jsx)(t.h3,{id:"props",children:"Props"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.strong,{children:"note_id"}),": An integer that uniquely identifies the note to be deleted. This is a required parameter in the endpoint path."]}),"\n"]}),"\n",(0,o.jsx)(t.h3,{id:"html-elements-rendered",children:"HTML Elements Rendered"}),"\n",(0,o.jsx)(t.p,{children:"This API endpoint does not render any HTML elements directly. It is a backend service used to manage note data and does not have a user interface component."})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>d,x:()=>r});var i=n(6540);const o={},s=i.createContext(o);function d(e){const t=i.useContext(s);return i.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:d(e.components),i.createElement(s.Provider,{value:t},e.children)}}}]);