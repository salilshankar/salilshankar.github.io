"use strict";(self.webpackChunkauto_doc_test=self.webpackChunkauto_doc_test||[]).push([[8590],{8453:(e,t,s)=>{s.d(t,{R:()=>r,x:()=>a});var n=s(6540);const i={},o=n.createContext(i);function r(e){const t=n.useContext(o);return n.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),n.createElement(o.Provider,{value:t},e.children)}},8754:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>d,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"taskhive-api/get_tasks","title":"Task List Component","description":"A UI component that fetches and displays a list of tasks from the server.","source":"@site/docs/taskhive-api/get_tasks.md","sourceDirName":"taskhive-api","slug":"/taskhive-api/get_tasks","permalink":"/docs/taskhive-api/get_tasks","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/taskhive-api/get_tasks.md","tags":[],"version":"current","frontMatter":{"title":"Task List Component","description":"A UI component that fetches and displays a list of tasks from the server."},"sidebar":"tutorialSidebar","previous":{"title":"Notes API Component","permalink":"/docs/taskhive-api/get_notes"},"next":{"title":"Health Component","permalink":"/docs/taskhive-api/health"}}');var i=s(4848),o=s(8453);const r={title:"Task List Component",description:"A UI component that fetches and displays a list of tasks from the server."},a=void 0,d={},c=[{value:"Props",id:"props",level:3},{value:"Rendered HTML Elements",id:"rendered-html-elements",level:3}];function l(e){const t={code:"code",h3:"h3",li:"li",p:"p",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(t.p,{children:["The Task List Component is designed to fetch and display a list of tasks from the server using the ",(0,i.jsx)(t.code,{children:"/api/tasks"})," endpoint."]}),"\n",(0,i.jsx)(t.h3,{id:"props",children:"Props"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"path"}),": The API endpoint used to retrieve tasks. This component uses the ",(0,i.jsx)(t.code,{children:"/api/tasks"})," endpoint."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"methods"}),": The HTTP methods supported by the component. Currently, it supports the ",(0,i.jsx)(t.code,{children:"GET"})," method to fetch the tasks."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"function"}),": The function responsible for handling the API call. In this case, it is ",(0,i.jsx)(t.code,{children:"get_tasks"}),", which retrieves the list of tasks from the server."]}),"\n"]}),"\n",(0,i.jsx)(t.h3,{id:"rendered-html-elements",children:"Rendered HTML Elements"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:(0,i.jsx)(t.code,{children:"<div>"})}),": A container element that wraps the entire list of tasks."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:(0,i.jsx)(t.code,{children:"<ul>"})}),": An unordered list that organizes the tasks in a list format."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:(0,i.jsx)(t.code,{children:"<li>"})}),": Each task is rendered as a list item within the unordered list."]}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"This component provides a straightforward way to display tasks by fetching data from a specified API endpoint and rendering it in a user-friendly list format."})]})}function h(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}}}]);