"use strict";(self.webpackChunkauto_doc_test=self.webpackChunkauto_doc_test||[]).push([[7791],{46:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>c,default:()=>l,frontMatter:()=>r,metadata:()=>s,toc:()=>a});const s=JSON.parse('{"id":"taskhive-api/get_notes","title":"Notes API Component","description":"Documentation for the Notes API component that retrieves a list of notes.","source":"@site/docs/taskhive-api/get_notes.md","sourceDirName":"taskhive-api","slug":"/taskhive-api/get_notes","permalink":"/docs/taskhive-api/get_notes","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/taskhive-api/get_notes.md","tags":[],"version":"current","frontMatter":{"title":"Notes API Component","description":"Documentation for the Notes API component that retrieves a list of notes."},"sidebar":"tutorialSidebar","previous":{"title":"Delete Task API Endpoint","permalink":"/docs/taskhive-api/delete_task"},"next":{"title":"Task List Component","permalink":"/docs/taskhive-api/get_tasks"}}');var o=n(4848),i=n(8453);const r={title:"Notes API Component",description:"Documentation for the Notes API component that retrieves a list of notes."},c="Notes API Component",d={},a=[{value:"Props",id:"props",level:2},{value:"Rendered HTML Elements",id:"rendered-html-elements",level:2}];function h(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.header,{children:(0,o.jsx)(t.h1,{id:"notes-api-component",children:"Notes API Component"})}),"\n",(0,o.jsx)(t.p,{children:"The Notes API component is responsible for fetching and displaying a list of notes from the server."}),"\n",(0,o.jsx)(t.h2,{id:"props",children:"Props"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.strong,{children:"path"}),": This prop specifies the API endpoint used to retrieve the notes. For this component, the path is set to ",(0,o.jsx)(t.code,{children:"/api/notes"}),"."]}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.strong,{children:"methods"}),": This prop defines the HTTP methods that can be used with this endpoint. The component supports the ",(0,o.jsx)(t.code,{children:"GET"})," method to fetch notes."]}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.strong,{children:"function"}),": This prop indicates the function associated with the component. The ",(0,o.jsx)(t.code,{children:"get_notes"})," function is used to retrieve the list of notes from the server."]}),"\n"]}),"\n",(0,o.jsx)(t.h2,{id:"rendered-html-elements",children:"Rendered HTML Elements"}),"\n",(0,o.jsx)(t.p,{children:"The component primarily renders the following HTML elements:"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.strong,{children:(0,o.jsx)(t.code,{children:"<ul>"})}),": An unordered list that contains the notes."]}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.strong,{children:(0,o.jsx)(t.code,{children:"<li>"})}),": Each note is displayed within a list item element."]}),"\n"]}),"\n",(0,o.jsx)(t.p,{children:"This component is designed to efficiently fetch and display notes in a user-friendly format."})]})}function l(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(h,{...e})}):h(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>c});var s=n(6540);const o={},i=s.createContext(o);function r(e){const t=s.useContext(i);return s.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),s.createElement(i.Provider,{value:t},e.children)}}}]);